{"version":3,"sources":["actions/types.js","middleware/fetchingMiddleware.js","actions/creators/global.js","reducers/initialState.js","reducers/settingReducer.js","reducers/messageReducer.js","reducers/questionsReducer.js","reducers/index.js","reducers/tagsReducer.js","apis/index.js","apis/tags.js","sagas/tags.js","apis/question.js","sagas/questions.js","sagas/watchers.js","sagas/index.js","middleware/globalMessageMiddleware.js","store/configureStore.js","theme/index.js","components/LoadingMask/index.js","components/MessageCenter/view.js","components/MessageCenter/index.js","layouts/MainLayout/index.js","actions/creators/tags.js","pages/MainPage/components/SearchBar.js","components/ListScrollWrapper.js","hooks/index.js","actions/creators/questions.js","pages/MainPage/components/TagList/TagButton.js","pages/MainPage/components/TagList/index.js","pages/MainPage/components/QuestionItem/components/FieldContent.js","pages/MainPage/components/QuestionItem/index.js","pages/MainPage/components/ItemsCreator.js","pages/MainPage/index.js","App.js","index.js"],"names":["basicAsyncActionTypes","asyncActionTypes","reduce","result","actionType","constants","responseRegExp","startFetchingMiddleware","store","next","action","includes","type","dispatch","types","START_FETCHING","payload","stopFetchingMiddleware","isResponseAction","test","basicType","replace","STOP_FETCHING","settingState","fetchingTypes","messageState","msgKey","status","text","questionsState","hasMore","items","tagsState","startFetching","setting","stopFetching","sendMessage","getTime","Date","geQuestionList","questions","has_more","appReducer","combineReducers","message","SEND_MESSAGE","GET_QUESTION_LIST_SUCCESS","INIT_GET_QUESTION_LIST_SUCCESS","GET_QUESTION_LIST_ERROR","GET_QUESTION_LIST","tags","GET_TAG_LIST_SUCCESS","GET_TAG_LIST_ERROR","GET_TAG_LIST","rootReducer","state","server","axios","create","baseURL","process","interceptors","request","use","config","method","params","site","getTagListResult","a","get","res","getTagListSaga","OkGetList","call","data","put","response","globalMessage","getQuestionListResult","getQuestionListSaga","getInitialQuestionListSaga","OkInitGetList","INIT_GET_QUESTION_LIST_ERROR","watchGetQuestionListSaga","watchInitialGetQuestionListSaga","watchGetTagListSaga","takeLatest","INIT_GET_QUESTION_LIST","sagaFormat","key","sagas","Watchers","push","fork","all","globalMessageMiddleware","isEmpty","configureStore","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewareList","preventStore","createStore","applyMiddleware","runSaga","run","rootSaga","breakpoints","createBreakpoints","theme","createTheme","overrides","MuiTypography","h6","down","fontSize","palette","primary","main","contrastText","secondary","useStyles","makeStyles","backdrop","zIndex","drawer","color","LoadingMask","classes","useSelector","Backdrop","className","open","CircularProgress","MessageCenter","this","props","enqueueSnackbar","variant","anchorOrigin","horizontal","vertical","React","Component","withSnackbar","connect","MainLayout","children","Container","maxWidth","getTagListAction","pagesize","order","sort","root","borderRadius","toolBar","padding","alignItems","searchInput","borderTopLeftRadius","borderBottomLeftRadius","background","searchButton","spacing","borderTopRightRadius","borderBottomRightRadius","textTransform","SearchBar","useState","searchValue","setSearchValue","useDispatch","dispatchAction","useCallback","throttle","inname","trailing","leading","AppBar","position","Toolbar","OutlinedInput","value","fullWidth","margin","onChange","e","nextValue","target","Button","onClick","ListScrollWrapper","height","isLoading","getItemSize","loadNextPage","ItemsCreator","loadMore","itemCount","length","isItemLoaded","index","loadMoreItems","onItemsRendered","ref","itemData","itemSize","useGetQuestions","Boolean","initialQuestions","page","initialGetQuestionListAction","getNextQuestions","getQuestionListAction","borderColor","borderWidth","borderStyle","userSelect","whiteSpace","label","hideCheckBox","display","TagButton","FormControlLabel","control","Checkbox","width","overflow","group","flexWrap","marginRight","TagList","selectedTags","onSelectedTagListChange","style","isTagInclude","name","Typography","FormGroup","selected","nextSelectedTags","filter","tag","removeTag","concat","insertTag","row","map","checked","up","outline","contented","FieldContent","highlightType","classNames","component","subItem","textAlign","title","textOverflow","avatar","alignSelf","avatarImg","avatarName","getScoreHighlight","score","QuestionItem","answerCount","isAnswered","view_count","answer_count","is_answered","owner","link","display_name","profile_image","ListItem","divider","disableGutters","button","Grid","container","direction","dangerouslySetInnerHTML","__html","ListItemText","item","Avatar","src","defaultProps","getTagged","join","MainPage","setSelectedTags","setPage","other","tagged","callback","useEffect","useTrackTags","Paper","square","startIndex","nextPage","innerHeight","App","CssBaseline","path","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.7eaef025.chunk.js","sourcesContent":["import constants from 'flux-constants';\n\nexport const syncActionTypes = [\n  'START_FETCHING',\n  'STOP_FETCHING',\n  'SEND_MESSAGE',\n  'INIT_QUESTION_LIST'\n];\n\nexport const basicAsyncActionTypes = ['GET_QUESTION_LIST', 'GET_TAG_LIST', 'INIT_GET_QUESTION_LIST'];\n\nconst asyncActionTypes = basicAsyncActionTypes.reduce((result, actionType) => {\n  return [\n    ...result,\n    actionType,\n    `${actionType}_SUCCESS`,\n    `${actionType}_ERROR`,\n  ];\n}, []);\n\nexport default constants([...syncActionTypes, ...asyncActionTypes]);\n","import {\n  startFetchingAction,\n  stopFetchingAction,\n} from 'actions/creators/global';\nimport { basicAsyncActionTypes } from 'actions/types';\n\nconst responseRegExp = /_SUCCESS|_ERROR/;\n\nexport const startFetchingMiddleware = (store) => (next) => (action) => {\n  const isBasicAsyncAction = basicAsyncActionTypes.includes(action.type);\n  if (isBasicAsyncAction) {\n    store.dispatch(startFetchingAction(action.type));\n  }\n  return next(action);\n};\n\nexport const stopFetchingMiddleware = (store) => (next) => (action) => {\n  const isResponseAction = responseRegExp.test(action.type);\n\n  const basicType = action.type.replace(responseRegExp, '');\n  const isBasicAsyncAction = basicAsyncActionTypes.includes(basicType);\n\n  if (isBasicAsyncAction && isResponseAction) {\n    store.dispatch(stopFetchingAction(basicType));\n  }\n  return next(action);\n};\n","import types from '../types';\n\nexport const startFetchingAction = (actionType) => ({\n  type: types.START_FETCHING,\n  payload: actionType,\n});\n\nexport const stopFetchingAction = (actionType) => ({\n  type: types.STOP_FETCHING,\n  payload: actionType,\n});\n\nexport const sendMessageAction = (status, text) => ({\n  type: types.SEND_MESSAGE,\n  payload: {\n    status,\n    text,\n  },\n});\n","export const settingState = {\n  fetchingTypes: {},\n};\n\nexport const messageState = {\n  msgKey: 0,\n  status: '',\n  text: '',\n};\n\nexport const questionsState = {\n  hasMore: true,\n  items: []\n};\n\nexport const tagsState = {\n  items: []\n};\n","import { settingState } from './initialState';\nimport types from 'actions/types';\n\nconst startFetching = (setting, payload) => ({\n  ...setting,\n  fetchingTypes: {\n    ...setting.fetchingTypes,\n    [payload]: 'LOADING',\n  },\n});\n\nconst stopFetching = (setting, payload) => {\n  const { fetchingTypes } = setting;\n  delete fetchingTypes[payload];\n  return { ...setting, fetchingTypes: { ...fetchingTypes } };\n};\n\nexport default function routeReducer(\n  setting = settingState,\n  { type, payload }\n) {\n  switch (type) {\n    case types.START_FETCHING:\n      return startFetching(setting, payload);\n    case types.STOP_FETCHING:\n      return stopFetching(setting, payload);\n    default:\n      return setting;\n  }\n}\n","import { messageState } from './initialState';\nimport types from 'actions/types';\nimport getTime from 'date-fns/getTime';\n\nconst sendMessage = (status, text) => ({\n  msgKey: getTime(new Date()),\n  status,\n  text,\n});\n\nexport default function routeReducer(message = messageState, { type, payload }) {\n  switch (type) {\n    case types.SEND_MESSAGE:\n      return sendMessage(payload.status, payload.text);\n    default:\n      return message;\n  }\n}\n","import { questionsState } from './initialState';\nimport types from 'actions/types';\n\nconst geQuestionList = (questions, payload) => {\n  const items = [...questions.items, ...payload.items];\n  return {\n    ...questions,\n    hasMore: payload.has_more,\n    items,\n  };\n};\n\nexport default function routeReducer(\n  questions = questionsState,\n  { type, payload }\n) {\n  switch (type) {\n    case types.GET_QUESTION_LIST_SUCCESS:\n      return geQuestionList(questions, payload);\n    case types.INIT_GET_QUESTION_LIST_SUCCESS:\n      return geQuestionList(questionsState, payload);\n    case types.GET_QUESTION_LIST_ERROR:\n    case types.GET_QUESTION_LIST:\n    default:\n      return questions;\n  }\n}\n","import { combineReducers } from 'redux';\nimport setting from './settingReducer';\nimport message from './messageReducer';\nimport questions from './questionsReducer';\nimport tags from './tagsReducer';\n\nconst appReducer = combineReducers({\n  setting,\n  message,\n  questions,\n  tags\n});\n\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { tagsState } from './initialState';\nimport types from 'actions/types';\n\nexport default function routeReducer(tags = tagsState, { type, payload }) {\n  switch (type) {\n    case types.GET_TAG_LIST_SUCCESS:\n      return { ...tags, items: [...payload] };\n    case types.GET_TAG_LIST_ERROR:\n    case types.GET_TAG_LIST:\n    default:\n      return tags;\n  }\n}\n","import axios from 'axios';\n\nconst server = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  'Content-Type': 'application/json',\n});\n\nserver.interceptors.request.use((config) => {\n\n  if (config.method === 'get') {\n    config.params = {\n      ...config.params,\n      site: 'stackoverflow',\n    };\n  }\n  return config;\n});\n\nexport const getServer = () => server;\nexport default server;\n","import server from './';\n\nexport const getTagListResult = async (payload) => {\n  const res = await server.get('/tags', {\n    params: payload,\n  });\n\n  return res;\n};\n","import { call, put } from '@redux-saga/core/effects';\nimport types from 'actions/types';\nimport { getTagListResult } from 'apis/tags';\n\nconst OkGetList = (payload) => {\n  return {\n    type: types.GET_TAG_LIST_SUCCESS,\n    payload,\n  };\n};\n\nconst ErrorGetList = (message) => {\n  return {\n    type: types.GET_TAG_LIST_ERROR,\n    globalMessage: {\n      status: 'error',\n      text: message,\n    },\n  };\n};\n\nexport function* getTagListSaga({ payload }) {\n  try {\n    const { data } = yield call(getTagListResult, payload);\n    yield put(OkGetList(data.items));\n  } catch (error) {\n    yield put(ErrorGetList(error?.response?.data?.data?.message ?? error.message));\n  }\n}\n","import server from './';\n\nexport const getQuestionListResult = async (payload) => {\n  const res = await server.get('/questions', {\n    params: payload,\n  });\n\n  return res;\n};\n","import { call, put } from '@redux-saga/core/effects';\nimport { getQuestionListResult } from 'apis/question';\nimport types from 'actions/types';\n\nconst OkGetList = (payload) => {\n  return {\n    type: types.GET_QUESTION_LIST_SUCCESS,\n    payload,\n  };\n};\n\nconst ErrorGetList = (message) => {\n  return {\n    type: types.GET_QUESTION_LIST_ERROR,\n    globalMessage: {\n      status: 'error',\n      text: message,\n    },\n  };\n};\n\nexport function* getQuestionListSaga({ payload }) {\n  try {\n    const { data } = yield call(getQuestionListResult, payload);\n    yield put(OkGetList(data));\n  } catch (error) {\n    yield put(ErrorGetList(error.response?.data.data.message || error.message));\n  }\n}\n\nconst OkInitGetList = (payload) => {\n  return {\n    type: types.INIT_GET_QUESTION_LIST_SUCCESS,\n    payload,\n  };\n};\n\nconst ErrorInitGetList = (message) => {\n  return {\n    type: types.INIT_GET_QUESTION_LIST_ERROR,\n    globalMessage: {\n      status: 'error',\n      text: message,\n    },\n  };\n};\n\nexport function* getInitialQuestionListSaga({ payload }) {\n  try {\n    const { data } = yield call(getQuestionListResult, payload);\n    yield put(OkInitGetList(data));\n  } catch (error) {\n    yield put(\n      ErrorInitGetList(error.response?.data?.data?.message || error.message)\n    );\n  }\n}\n","import { takeLatest } from '@redux-saga/core/effects';\nimport types from 'actions/types';\nimport { getTagListSaga } from './tags';\nimport { getQuestionListSaga, getInitialQuestionListSaga } from './questions';\n\nexport function* watchGetQuestionListSaga() {\n  yield takeLatest(types.GET_QUESTION_LIST, getQuestionListSaga);\n}\n\nexport function* watchInitialGetQuestionListSaga() {\n  yield takeLatest(types.INIT_GET_QUESTION_LIST, getInitialQuestionListSaga);\n}\n\nexport function* watchGetTagListSaga() {\n  yield takeLatest(types.GET_TAG_LIST, getTagListSaga);\n}\n","import { fork, all } from \"redux-saga/effects\";\nimport * as Watchers from \"./watchers\";\n\nexport default function* sagaFormat() {\n  const sagas = [];\n  for (const key in Watchers) {\n    sagas.push(fork(Watchers[key]));\n  }\n\n  yield all(sagas);\n}\n","import { sendMessageAction } from 'actions/creators/global';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const globalMessageMiddleware = (store) => (next) => (action) => {\n  const { globalMessage } = action;\n\n  if (!isEmpty(globalMessage)) {\n    store.dispatch(sendMessageAction(globalMessage.status, globalMessage.text));\n  }\n\n  return next(action);\n};\n","import {\n  startFetchingMiddleware,\n  stopFetchingMiddleware,\n} from 'middleware/fetchingMiddleware';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from 'reducers';\nimport rootSaga from 'sagas';\nimport { globalMessageMiddleware } from 'middleware/globalMessageMiddleware';\n\nfunction configureStore() {\n  const sagaMiddleware = createSagaMiddleware({});\n\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  const middlewareList = [\n    startFetchingMiddleware,\n    sagaMiddleware,\n    stopFetchingMiddleware,\n    globalMessageMiddleware\n  ];\n\n  const preventStore = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middlewareList))\n  );\n\n  if (module.hot) {\n    module.hot.accept('../reducers/index', () => {\n      const nextRootReducer = require('../reducers/index');\n      preventStore.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return {\n    store: {\n      ...preventStore,\n      runSaga: () => sagaMiddleware.run(rootSaga),\n    },\n  };\n}\n\nexport default configureStore;\n","import { createTheme } from '@material-ui/core';\nimport createBreakpoints from '@material-ui/core/styles/createBreakpoints';\nconst breakpoints = createBreakpoints({});\n\nconst theme = createTheme({\n  breakpoints,\n  overrides: {\n    MuiTypography: {\n      h6: {\n        [breakpoints.down('sm')]: {\n          fontSize: 18,\n        },\n\n      },\n    },\n  },\n  palette: {\n    primary: {\n      main: '#B4D8E8',\n      contrastText: '#000',\n    },\n    text: {\n      primary: '#000',\n      secondary: '#C2606E',\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { Backdrop, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nfunction LoadingMask() {\n  const classes = useStyles();\n  const fetchingTypes = useSelector(({ setting }) => setting.fetchingTypes);\n\n  return (\n    <Backdrop className={classes.backdrop} open={!isEmpty(fetchingTypes)}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n}\n\nexport default LoadingMask;\n","import React from 'react';\nimport { withSnackbar } from 'notistack';\n\nclass MessageCenter extends React.Component {\n  componentDidUpdate() {\n    const { msgKey, status, text } = this.props;\n\n    if (msgKey !== 0) {\n      this.props.enqueueSnackbar(text, {\n        key: msgKey,\n        variant: status,\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'bottom',\n        },\n      });\n    }\n  }\n\n  render() {\n    return <></>;\n  }\n}\n\nexport default withSnackbar(MessageCenter);\n","import {connect} from 'react-redux';\nimport MessageCenter from './view';\n\nconst mapStateToProps = ({message}) => {\n  return message;\n};\n\nconst mapDispatchToProps = () => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageCenter);\n","import React from 'react';\nimport { Container } from '@material-ui/core';\n\nfunction MainLayout({ children }) {\n  return (\n    <Container  maxWidth={'md'}>\n      {children}\n    </Container>\n  );\n}\n\nexport default MainLayout;\n","import types from '../types';\n\nexport const getTagListAction = (payload) => ({\n  type: types.GET_TAG_LIST,\n  payload: {\n    pagesize: 10,\n    order: 'desc',\n    sort: 'popular',\n    ...payload,\n  },\n});\n","import {\n  AppBar,\n  Button,\n  makeStyles,\n  OutlinedInput,\n  Toolbar,\n} from '@material-ui/core';\nimport { getTagListAction } from 'actions/creators/tags';\nimport { throttle } from 'lodash';\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst SEARCH_BAR_RADIUS = 10;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: SEARCH_BAR_RADIUS,\n  },\n  toolBar: {\n    padding: 0,\n    alignItems: 'stretch',\n  },\n  searchInput: {\n    borderTopLeftRadius: SEARCH_BAR_RADIUS,\n    borderBottomLeftRadius: SEARCH_BAR_RADIUS,\n    background: '#fff',\n  },\n  searchButton: {\n    padding: theme.spacing(0, 3),\n    borderTopRightRadius: SEARCH_BAR_RADIUS,\n    borderBottomRightRadius: SEARCH_BAR_RADIUS,\n    textTransform: 'none',\n  },\n}));\n\nfunction SearchBar() {\n  const classes = useStyles();\n  const [searchValue, setSearchValue] = useState('');\n  const dispatch = useDispatch();\n\n  const dispatchAction = useCallback(\n    throttle(\n      (searchValue) => {\n        dispatch(getTagListAction({ inname: searchValue }));\n      },\n      5000,\n      { trailing: true, leading: true }\n    ),\n    []\n  );\n\n  const onSearchClick = () => {\n    dispatchAction(searchValue);\n  };\n\n  const onSearchChange = (e) => {\n    const nextValue = e.target.value;\n    setSearchValue(() => {\n      dispatchAction(nextValue);\n      return nextValue;\n    });\n  };\n\n  return (\n    <AppBar className={classes.root} position={'sticky'}>\n      <Toolbar className={classes.toolBar} variant='dense'>\n        <OutlinedInput\n          value={searchValue}\n          className={classes.searchInput}\n          fullWidth\n          variant='outlined'\n          margin='dense'\n          onChange={onSearchChange}\n        />\n        <Button className={classes.searchButton} onClick={onSearchClick}>\n          Search\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nSearchBar.propTypes = {};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VariableSizeList } from 'react-window';\nimport InfiniteLoader from 'react-window-infinite-loader';\n\nfunction ListScrollWrapper({\n  items,\n  height,\n  isLoading,\n  getItemSize,\n  loadNextPage,\n  ItemsCreator,\n  hasMore,\n}) {\n  const isItemLoaded = (index) => index < items.length;\n  const loadMore = isLoading ? () => {} : loadNextPage;\n  const itemCount = hasMore ? items.length + 1 : items.length;\n  return (\n    <InfiniteLoader\n      isItemLoaded={isItemLoaded}\n      itemCount={itemCount}\n      loadMoreItems={loadMore}>\n      {({ onItemsRendered, ref }) => {\n        return (\n          <VariableSizeList\n            ref={ref}\n            height={height}\n            itemData={items}\n            itemCount={itemCount}\n            itemSize={getItemSize}\n            onItemsRendered={onItemsRendered}>\n            {ItemsCreator}\n          </VariableSizeList>\n        );\n      }}\n    </InfiniteLoader>\n  );\n}\n\nListScrollWrapper.propTypes = {\n  items: PropTypes.array.isRequired,\n  height:PropTypes.number.isRequired ,\n  isLoading:PropTypes.bool.isRequired ,\n  getItemSize:PropTypes.func.isRequired ,\n  loadNextPage:PropTypes.func.isRequired ,\n  ItemsCreator:PropTypes.func.isRequired ,\n  hasMore:PropTypes.bool.isRequired ,\n};\n\nexport default ListScrollWrapper;\n","\nimport { getQuestionListAction, initialGetQuestionListAction } from 'actions/creators/questions';\nimport { getTagListAction } from 'actions/creators/tags'\nimport types from 'actions/types';\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const useTrackTags = (callback) => {\n  const tags = useSelector(({ tags }) => tags);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (tags.items.length !== 0) {\n      callback([tags.items[0].name]);\n    } else {\n      dispatch(getTagListAction({}));\n    }\n  }, [tags , callback]);\n\n  return tags;\n};\n\nexport const useGetQuestions = () => {\n  const dispatch = useDispatch();\n  const questions = useSelector(({ questions, setting }) => {\n    return {\n      ...questions,\n      isLoading: Boolean(setting.fetchingTypes[types.GET_QUESTION_LIST]),\n    };\n  });\n\n  const initialQuestions = useCallback((payload) => {\n    dispatch(\n      initialGetQuestionListAction({\n        ...payload,\n        page: 1,\n      })\n    );\n  }, []);\n\n  const getNextQuestions = useCallback((payload) => {\n    dispatch(\n      getQuestionListAction({\n        ...payload,\n      })\n    );\n  }, []);\n\n  return {\n    ...questions,\n    initialQuestions,\n    getNextQuestions,\n  };\n};\n","import types from '../types';\n\nexport const getQuestionListAction = (payload) => ({\n  type: types.GET_QUESTION_LIST,\n  payload: {\n    ...payload,\n    pagesize: 20,\n  },\n});\n\nexport const initialGetQuestionListAction = (payload) => ({\n  type: types.INIT_GET_QUESTION_LIST,\n  payload: {\n    ...payload,\n    pagesize: 20,\n    page: 1\n  },\n});","import React from 'react';\nimport { Checkbox, FormControlLabel, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      borderColor: theme.palette.primary.main,\n      borderWidth: 2,\n      borderStyle: 'solid',\n      borderRadius: 10,\n      userSelect: 'none',\n      whiteSpace: 'nowrap',\n    },\n    label: {\n      padding : 10\n    },\n    hideCheckBox: {\n      display: 'none',\n      '&.Mui-checked + *':{\n        background: theme.palette.primary.main,\n      }\n    },\n  };\n});\n\nfunction TagButton(props) {\n  const classes = useStyles();\n  return (\n    <FormControlLabel\n      {...props}\n      classes={{\n        root: classes.root,\n        label: classes.label,\n      }}\n      control={<Checkbox className={classes.hideCheckBox} />}\n    />\n  );\n}\n\nTagButton.propTypes = {};\n\nexport default TagButton;\n","import React, { useCallback } from 'react';\nimport TagButton from './TagButton';\nimport { FormGroup, makeStyles, Typography } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      width: '100%',\n      overflow: 'auto',\n      padding: theme.spacing(1, 0.5),\n    },\n    group: {\n      flexWrap: 'nowrap',\n      padding: theme.spacing(1, 2),\n      '& > *': {\n        marginRight: theme.spacing(3),\n      },\n    },\n  };\n});\n\nconst insertTag = (tags, name) => {\n  return tags.concat(name);\n};\n\nconst removeTag = (tags, name) => {\n  return tags.filter((tag) => tag !== name);\n};\n\nfunction TagList({ tags , selectedTags, onSelectedTagListChange, style }) {\n  const classes = useStyles();\n\n  const isTagInclude = useCallback(\n    (name) => {\n      return selectedTags.includes(name);\n    },\n    [selectedTags]\n  );\n\n  const onTagChange = (e) => {\n    const selected = e.target.value;\n\n    let nextSelectedTags = null;\n    if (!isTagInclude(selected)) {\n      nextSelectedTags = insertTag(selectedTags, selected);\n    } else {\n      nextSelectedTags = removeTag(selectedTags, selected);\n    }\n\n    onSelectedTagListChange(nextSelectedTags);\n  };\n\n  return (\n    <div className={classes.root} style={style}>\n      <Typography variant='h4'>Trending</Typography>\n      <FormGroup className={classes.group} onChange={onTagChange} row>\n        {tags.items.map(({ name }) => {\n          return (\n            <TagButton\n              key={`tag-${name}`}\n              label={name}\n              value={name}\n              checked={isTagInclude(name)}\n            />\n          );\n        })}\n      </FormGroup>\n    </div>\n  );\n}\n\nTagList.propTypes = {};\n\nexport default TagList;\n","import React from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      [theme.breakpoints.up('sm')]: {\n        padding: theme.spacing(0, 1),\n      },\n      [theme.breakpoints.down('md')]: {\n        padding: theme.spacing(0, 4),\n      },\n    },\n    text: {\n      color: '#CD292B',\n    },\n    outline: {\n      borderWidth: 1,\n      borderStyle: 'solid',\n      borderColor: '#547D52',\n      color: '#547D52',\n    },\n    contented: {\n      background: '#377E22',\n      color: '#fff',\n    },\n  };\n});\n\nfunction FieldContent({ value, highlightType }) {\n  const classes = useStyles();\n\n  return (\n    <Typography\n      className={classNames(classes.root, classes[highlightType])}\n      color='textPrimary'\n      component='span'\n      variant='h6'>\n      {value}\n    </Typography>\n  );\n}\n\nFieldContent.propTypes = {};\n\nexport default FieldContent;\n","import React from 'react';\nimport {\n  Avatar,\n  Grid,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport FieldContent from './components/FieldContent';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    subItem: {\n      textAlign: 'center',\n    },\n    title: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n    },\n    avatar: {\n      textAlign: 'center',\n      alignSelf: 'flex-end',\n      marginRight: 5,\n      width: 110,\n    },\n    avatarImg: {\n      [theme.breakpoints.up('md')]: {\n        width: 75,\n        height: 75,\n      },\n      [theme.breakpoints.down('sm')]: {\n        width: 60,\n        height: 60,\n      },\n      marginBottom: 5,\n    },\n    avatarName: {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: 100,\n    },\n  };\n});\n\nconst getAnswerHighlight = (answerCount, isAnswered) => {\n  if (answerCount > 1 && isAnswered) return 'outline';\n  else if (answerCount > 1 && !isAnswered) return 'contented';\n};\n\nconst getScoreHighlight = (score) => {\n  return score < 0 ? 'text' : '';\n};\n\nconst transformTitle = (text) => {\n  return { __html: text };\n};\n\nfunction QuestionItem({\n  title,\n  score,\n  view_count,\n  answer_count,\n  is_answered,\n  owner = {},\n  link,\n  style,\n}) {\n  const classes = useStyles();\n  const { display_name, profile_image } = owner;\n\n  const onItemClick = () => {\n    window.open(link);\n  };\n\n  return (\n    <ListItem\n      className={classes.root}\n      style={style}\n      divider\n      alignItems='center'\n      disableGutters\n      button\n      onClick={onItemClick}>\n      <Grid container direction='column'>\n        <ListItem className={classes.title} component='div'>\n          <Typography\n            variant='h6'\n            dangerouslySetInnerHTML={transformTitle(title)}\n          />\n        </ListItem>\n        <ListItem className={classes.subItem} component='div' disableGutters>\n          <ListItemText\n            primary={\n              <Typography color='textSecondary' variant='h6'>\n                Score\n              </Typography>\n            }\n            secondary={\n              <FieldContent\n                value={score}\n                highlightType={getScoreHighlight(score)}\n              />\n            }\n          />\n          <ListItemText\n            primary={\n              <Typography color='textSecondary' variant='h6'>\n                Answers\n              </Typography>\n            }\n            secondary={\n              <FieldContent\n                value={answer_count}\n                highlightType={getAnswerHighlight(answer_count, is_answered)}\n              />\n            }\n          />\n          <ListItemText\n            primary={\n              <Typography color='textSecondary' variant='h6'>\n                Viewed\n              </Typography>\n            }\n            secondary={<FieldContent value={view_count} />}\n          />\n          <Grid\n            className={classes.avatar}\n            container\n            direction='column'\n            alignItems='center'>\n            <Grid item>\n              <Avatar className={classes.avatarImg} src={profile_image} />\n            </Grid>\n            <Grid item>\n              <Typography className={classes.avatarName}>\n                {display_name}\n              </Typography>\n            </Grid>\n          </Grid>\n        </ListItem>\n      </Grid>\n    </ListItem>\n  );\n}\n\nQuestionItem.defaultProps = {\n  title: '',\n  score: 0,\n  view_count: 0,\n  answer_count: 0,\n  owner: {\n    display_name: '---',\n    profile_image: null,\n  },\n  is_answered: false,\n};\n\nQuestionItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n  view_count: PropTypes.number.isRequired,\n};\n\nexport default QuestionItem;\n","import React from 'react'\nimport TagList from './TagList';\nimport QuestionItem from './QuestionItem';\n\nfunction ItemsCreator({ index, style, data }) {\n  if (index === 0) return <TagList style={style} {...data[0]} />;\n\n  return <QuestionItem style={style} {...data[index]} />;\n}\n\nItemsCreator.propTypes = {\n\n}\n\nexport default ItemsCreator\n\n","import { makeStyles, Paper } from '@material-ui/core';\nimport React, { useCallback, useState } from 'react';\nimport SearchBar from './components/SearchBar';\nimport ListScrollWrapper from 'components/ListScrollWrapper';\nimport { useGetQuestions, useTrackTags } from 'hooks';\nimport ItemsCreator from './components/ItemsCreator';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n    padding: theme.spacing(1, 0),\n    overflow: 'auto',\n    position: 'relative',\n  },\n}));\n\nconst getItemSize = (index) => {\n  return index > 0 ? 160 : 121;\n};\n\nconst getTagged = (tags) => {\n  return tags.join(';');\n};\n\nfunction MainPage() {\n  const classes = useStyles();\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [page, setPage] = useState(0);\n\n  const { items, getNextQuestions, initialQuestions, ...other } =\n    useGetQuestions();\n\n  const onSelectedTagListChange = useCallback((tags) => {\n    setSelectedTags(tags);\n    setPage(1);\n\n    initialQuestions({\n      tagged: getTagged(selectedTags),\n      page: 1,\n    });\n  }, []);\n  \n  const tags = useTrackTags(onSelectedTagListChange);\n\n  const loadNextPage = (startIndex) => {\n    if (startIndex !== 1) {\n      const nextPage = page + 1;\n      setPage(nextPage);\n\n      getNextQuestions({\n        tagged: getTagged(selectedTags),\n        page: nextPage,\n      });\n    }\n  };\n\n  return (\n    <Paper className={classes.root} variant='elevation' square>\n      <SearchBar />\n      <ListScrollWrapper\n        {...other}\n        items={[{ tags , selectedTags , onSelectedTagListChange }, ...items]}\n        loadNextPage={loadNextPage}\n        ItemsCreator={ItemsCreator}\n        getItemSize={getItemSize}\n        height={window.innerHeight - 50}\n      />\n    </Paper>\n  );\n}\n\nexport default MainPage;\n","import { CssBaseline } from '@material-ui/core';\nimport LoadingMask from 'components/LoadingMask';\nimport MessageCenter from 'components/MessageCenter';\nimport MainLayout from 'layouts/MainLayout';\nimport MainPage from 'pages/MainPage';\nimport { Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <MessageCenter />\n      <CssBaseline />\n      <MainLayout>\n        <Switch>\n          <Route path='/' component={MainPage} />\n        </Switch>\n      </MainLayout>\n      <LoadingMask />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport configureStore from 'store/configureStore';\nimport theme from 'theme';\nimport App from './App';\nimport { SnackbarProvider } from 'notistack';\n\nconst { store } = configureStore();\n\nstore.runSaga();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <SnackbarProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </SnackbarProvider>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}